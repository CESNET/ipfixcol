<?xml version="1.0" encoding="utf-8"?>
<refentry
		xmlns:db="http://docbook.org/ns/docbook"
		xmlns:xlink="http://www.w3.org/1999/xlink"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://www.w3.org/1999/xlink http://docbook.org/xml/5.0/xsd/xlink.xsd
			http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd"
		version="5.0" xml:lang="en">
	<info>
		<copyright>
			<year>2017</year>
			<holder>CESNET, z.s.p.o.</holder>
		</copyright>
		<date>15 August 2017</date>
		<authorgroup>
			<author>
				<personname>
					<firstname>Michal</firstname>
					<surname>Kozubik</surname>
				</personname>
				<email>kozubik@cesnet.cz</email>
				<contrib>developer</contrib>
			</author>

			<author>
				<personname>
					<firstname>Lukas</firstname>
					<surname>Hutak</surname>
				</personname>
				<email>lukas.hutak@cesnet.cz</email>
				<contrib>developer</contrib>
			</author>

			<author>
				<personname>
					<firstname>Petr</firstname>
					<surname>Velan</surname>
				</personname>
				<email>petr.velan@cesnet.cz</email>
				<contrib>developer</contrib>
			</author>
		</authorgroup>
		<orgname>The Liberouter Project</orgname>
	</info>

	<refmeta>
		<refentrytitle>ipfixcol-json-output</refentrytitle>
		<manvolnum>1</manvolnum>
		<refmiscinfo otherclass="manual" class="manual">JSON output plugin for IPFIXcol.</refmiscinfo>
	</refmeta>

	<refnamediv>
		<refname>ipfixcol-json-output</refname>
		<refpurpose>JSON output plugin for IPFIXcol.</refpurpose>
	</refnamediv>

	<refsect1>
		<title>Description</title>
		<simpara>
			The <command>ipfix-json-output</command> plugin is a part of IPFIXcol (IPFIX collector). It converts IPFIX data into JSON format (each data set is an array of data records).
			Some elements (timestamp, IP, MAC, tcp flags...) are converted into human readable format. Others are represented as plain numbers.
		</simpara>
	</refsect1>

	<refsect1>
		<title>Configuration</title>
		<simpara>The collector must be configured to use json output plugin in startup.xml configuration (<filename>/etc/ipfixcol/startup.xml</filename>).
		The configuration specifies which plugins (destinations) are used by the collector to store data and provides configuration for the plugins themselves.
		</simpara>
		<simpara><filename>startup.xml</filename> json example</simpara>
		<programlisting>
	<![CDATA[
	<destination>
		<name>JSON storage plugin</name>
		<fileWriter>
			<fileFormat>json</fileFormat>
			<metadata>no</metadata>
			<odid>no</odid>
			<tcpFlags>formatted</tcpFlags>
			<timestamp>formatted</timestamp>
			<protocol>formatted</protocol>
			<ignoreUnknown>yes</ignoreUnknown>
			<nonPrintableChar>yes</nonPrintableChar>
			<prefix>ipfix.</prefix>

			<output>
				<type>print</type>
			</output>

			<output>
				<type>send</type>
				<ip>127.0.0.1</ip>
				<port>4444</port>
				<protocol>udp</protocol>
			</output>

			<output>
				<type>file</type>
				<path>/tmp/ipfixcol/flow/%Y/%m/%d/</path>
				<prefix>json.</prefix>
				<dumpInterval>
					<timeWindow>300</timeWindow>
					<timeAlignment>yes</timeAlignment>
				</dumpInterval>
			</output>

			<output>
				<type>server</type>
				<port>4800</port>
				<blocking>no</blocking>
			</output>

			<output>
				<type>kafka</type>
				<ip>127.0.0.1</ip>
				<port>9092</port>
				<partitions>2</partitions>
				<topic>ipfix.kafkaexport</topic>
			</output>
		</fileWriter>
	</destination>
	]]>
		</programlisting>

		<para>
			<variablelist>
				<varlistentry>
					<term><command>fileFormat</command></term>
					<listitem>
						<simpara>Same as in <filename>internalcfg.xml</filename> file.</simpara>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><command>metadata</command></term>
					<listitem>
						<simpara>Add record metadata to the output (yes/no) [default == no].</simpara>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><command>odid</command></term>
					<listitem>
						<simpara>Add source ODID to the output (yes/no) [default == no].</simpara>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><command>tcpFlags</command></term>
					<listitem>
						<simpara>Convert TCP flags to formatted style of dots and letters (formatted) or to a number (raw) [default == raw].</simpara>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><command>timestamp</command></term>
					<listitem>
						<simpara>Convert time to formatted style (formatted) or to a number (unix) [default == unix].</simpara>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><command>protocol</command></term>
					<listitem>
						<simpara>Convert protocol identification to formatted style (formatted) or to a number (raw) [default == formatted].</simpara>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><command>ignoreUnknown</command></term>
					<listitem>
						<simpara>Skip elements with unknown semantics (yes/no). Data of unknown elements are formatted as unsigned integer (1, 2, 4, 8 bytes length) or binary values. Names will have format 'eXXidYY' where XX is enterprise number and YY is element ID [default == yes].</simpara>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><command>nonPrintableChar</command></term>
					<listitem>
						<simpara>Convert non-printable characters (control characters, tab, newline, etc.) from IPFIX fields with data type of a string. (yes/no) [default == yes].</simpara>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><command>prefix</command></term>
					<listitem>
						<simpara>Prefix of the IPFIX element names. [default == ipfix.].</simpara>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><command>output</command></term>
					<listitem>
						<simpara>JSON data processor. Multiple outputs are supported.</simpara>
						<varlistentry>
							<term><command>type</command></term>
							<listitem>
								<simpara>Output type. <command>print</command>, <command>send</command>, <command>file</command>, <command>server</command>, and <command>kafka</command> are supported.</simpara>
							</listitem>
						</varlistentry>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><command>output - print</command></term>
					<listitem>
						<simpara>Writes data to the standard output.</simpara>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><command>output - send</command></term>
					<listitem>
						<simpara>Sends data over the network.</simpara>
						<varlistentry>
							<term><command>ip</command></term>
							<listitem>
								<simpara>IPv4/IPv6 address of remote host (default 127.0.0.1).</simpara>
							</listitem>
						</varlistentry>

						<varlistentry>
							<term><command>port</command></term>
							<listitem>
								<simpara>Remote port number (default 4739).</simpara>
							</listitem>
						</varlistentry>

						<varlistentry>
							<term><command>protocol</command></term>
							<listitem>
								<simpara>Connection protocol, one of UDP/TCP/SCTP (default UDP). This field is case insensitive.</simpara>
							</listitem>
						</varlistentry>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><command>output - file</command></term>
					<listitem>
						<simpara>Store data to files.</simpara>
						<varlistentry>
							<term><command>path</command></term>
							<listitem>
								<simpara>The path specifies storage directory for data collected by JSON plugin. Path can contain format specifier for day, month, etc. This allows you to create directory hierarchy based on format specifiers. See <command>strftime</command> for conversion specification.</simpara>
							</listitem>
						</varlistentry>

						<varlistentry>
							<term><command>prefix</command></term>
							<listitem>
								<simpara>Specifies name prefix for output files.</simpara>
							</listitem>
						</varlistentry>

						<varlistentry>
							<term><command>dumpInterval</command></term>
							<listitem>
								<varlistentry>
									<term><command>timeWindow</command></term>
									<listitem>
										<simpara>Specifies the time interval in seconds to rotate files, minimum is 60 [default == 300].</simpara>
									</listitem>
								</varlistentry>

								<varlistentry>
									<term><command>timeAlignment</command></term>
									<listitem>
										<simpara>Align file rotation with next N minute interval [default == yes].</simpara>
									</listitem>
								</varlistentry>
							</listitem>
						</varlistentry>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><command>output - server</command></term>
					<listitem>
						<simpara>Sends data over the network to connected clients.</simpara>
						<varlistentry>
							<term><command>port</command></term>
							<listitem>
								<simpara>Local port number.</simpara>
							</listitem>
						</varlistentry>

						<varlistentry>
							<term><command>blocking</command></term>
							<listitem>
								<simpara>Type of the connection. Blocking (yes) or non-blocking (no).</simpara>
							</listitem>
						</varlistentry>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><command>output - kafka</command></term>
					<listitem>
						<simpara>Sends data to Kafka. Must be compiled with --enable-kafka, tested against version 0.8.6.</simpara>
						<varlistentry>
							<term><command>ip</command></term>
							<listitem>
								<simpara>Address of Kafka host.</simpara>
							</listitem>
						</varlistentry>

						<varlistentry>
							<term><command>port</command></term>
							<listitem>
								<simpara>Port of Kafka host.</simpara>
							</listitem>
						</varlistentry>

						<varlistentry>
							<term><command>partitions</command></term>
							<listitem>
								<simpara>Number of partitions to which send data. Uses round robin to send to partitions 0 - (N-1).</simpara>
							</listitem>
						</varlistentry>

						<varlistentry>
							<term><command>topic</command></term>
							<listitem>
								<simpara>Kafka topic to send data to.</simpara>
							</listitem>
						</varlistentry>
					</listitem>
				</varlistentry>

			</variablelist>
		</para>
	</refsect1>

	<refsect1>
		<title>See Also</title>
		<para></para>
		<para>
			<variablelist>
				<varlistentry>
					<term>
						<citerefentry><refentrytitle>ipfixcol</refentrytitle><manvolnum>1</manvolnum></citerefentry>
					</term>
					<listitem>
						<simpara>Man pages</simpara>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<link xlink:href="http://www.liberouter.org/technologies/ipfixcol/">http://www.liberouter.org/technologies/ipfixcol/</link>
					</term>
					<listitem>
						<para>IPFIXcol Project Homepage</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<link xlink:href="http://www.liberouter.org">http://www.liberouter.org</link>
					</term>
					<listitem>
						<para>Liberouter web page</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<email>tmc-support@cesnet.cz</email>
					</term>
					<listitem>
						<para>Support mailing list</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</para>
	</refsect1>
</refentry>
